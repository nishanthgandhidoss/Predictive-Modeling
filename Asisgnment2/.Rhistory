knitr::opts_chunk$set(echo=FALSE)
genres <- read.table("data/genresBaseline.txt", header = FALSE)
head(genres)
genres <- read.table("data/genresBaseline.txt", header = FALSE, col.names = c("class"))
head(genres)
# installing the packages
installNewPackage <- function(packageName) {
if(packageName  %in% rownames(installed.packages()) == FALSE)
{
install.packages(packageName, repos = "http://cran.us.r-project.org", dependencies=TRUE)
}
}
installNewPackage("ggplot2")
library(ggplot2)
knitr::opts_chunk$set(echo=FALSE)
# Reading the data
genres <- read.table("data/genresBaseline.txt", header = FALSE, col.names = c("class"))
# Viewing the top 6 Rows
head(genres)
# Making a barplot of the genre classes
ggplot(genres, aes(x = factor(class))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
## scale_y_continuous(labels = percent_format()) #version 3.0.9
scale_y_continuous(labels = percent)
# installing the packages
installNewPackage <- function(packageName) {
if(packageName  %in% rownames(installed.packages()) == FALSE)
{
install.packages(packageName, repos = "http://cran.us.r-project.org", dependencies=TRUE)
}
}
installNewPackage("ggplot2")
installNewPackage("scales")
library(ggplot2)
library(scales)
# Making a barplot of the genre classes
ggplot(genres, aes(x = factor(class))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
## scale_y_continuous(labels = percent_format()) #version 3.0.9
scale_y_continuous(labels = percent)
# Making a barplot of the genre classes
ggplot(genres, aes(x = factor(class))) +
geom_bar(aes(y = (..count..)/sum(..count..), xlab("Genre"))) +
## scale_y_continuous(labels = percent_format()) #version 3.0.9
scale_y_continuous(labels = percent)
# Making a barplot of the genre classes
ggplot(genres, aes(x = as.factor(class))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = percent) +
labs(title = "Genre class label distribution", y = "Percent", x = "Genre Classes")
# Making a barplot of the genre classes
ggplot(genres, aes(x = as.factor(class))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = percent) +
labs(title = "Genre class label distribution", y = "Percent", x = "Genre Classes", ) +
theme(plot.title = element_text(hjust = 0.5))
# Making a barplot of the genre classes
ggplot(genres, aes(x = as.factor(class))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = percent) +
labs(title = "Genre class label distribution", y = "Percent", x = "Genre Classes") +
theme(plot.title = element_text(hjust = 0.5))
# Making a barplot of the genre classes
ggplot(genres, aes(x = as.factor(class))) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
scale_y_continuous(labels = percent) +
labs(title = "Genre class label distribution", y = "Percent", x = "Genre Classes") +
theme(plot.title = element_text(hjust = 0.6))
# installing the packages
installNewPackage <- function(packageName) {
if(packageName  %in% rownames(installed.packages()) == FALSE)
{
install.packages(packageName, repos = "http://cran.us.r-project.org", dependencies=TRUE)
}
}
installNewPackage("ggplot2")
installNewPackage("scales")
installNewPackage("caret")
library(ggplot2)
library(scales)
library(caret)
# Set the seed
set.seed(1)
cv_index <- createDataPartition(genres$class, k = 10, returnTrain = TRUE)
cv_index <- createDataPartition(genres$class, k = 10)
# Set the seed
set.seed(1)
cv_index <- createFolds(genres$class, k = 10, returnTrain = TRUE)
cv_index
# Set the seed
set.seed(1)
# Making the 10 folds
cv_index <- createFolds(genres$class, k = 10, returnTrain = TRUE)
# Printing out the 1st fold 30 elemets
cv_index$Fold01[1:30]
# Set the seed
set.seed(1)
# Making the 10 folds
cv_index <- createFolds(genres$class, k = 10, returnTrain = TRUE)
# Printing out the 1st fold 30 elemets
cv_index$Fold01[1:60]
# To view the full index (*** Uncomment the code below ***)
# cv_index
# installing the packages
installNewPackage <- function(packageName) {
if(packageName  %in% rownames(installed.packages()) == FALSE)
{
install.packages(packageName, repos = "http://cran.us.r-project.org", dependencies=TRUE)
}
}
installNewPackage("ggplot2")
installNewPackage("scales")
installNewPackage("caret")
installNewPackage("AppliedPredictiveModeling")
library(ggplot2)
library(scales)
library(caret)
library(AppliedPredictiveModeling)
# Reading the data
data("permeability")
# Viewing the top 6 Rows
head(permeability)
# Reading the data
permeability <- data("permeability")
# Viewing the top 6 Rows
head(permeability)
# Reading the data
data("permeability")
# Viewing the top 6 Rows
head(permeability)
# Making a histogram of the Permeablity
ggplot(data = permeability, aes(permeability$permeability)) + ggtitle("Distribution of permeability") + xlab(permeability) +
theme(plot.title = element_text(hjust = 0.5)) + geom_histogram(bins = 40)
# Reading the data
data("permeability")
permeability <- as.data.frame(permeability)
# Viewing the top 6 Rows
head(permeability)
# Making a histogram of the Permeablity
ggplot(data = permeability, aes(permeability$permeability)) + ggtitle("Distribution of permeability") + xlab(permeability) +
theme(plot.title = element_text(hjust = 0.5)) + geom_histogram(bins = 40)
# Making a histogram of the Permeablity
ggplot(data = permeability, aes(permeability[permeability])) + ggtitle("Distribution of permeability") + xlab(permeability) +
theme(plot.title = element_text(hjust = 0.5)) + geom_histogram(bins = 40)
# Reading the data
data("permeability")
permeability <- as.data.frame(permeability)
# Viewing the top 6 Rows
permeability[permeability]
# Reading the data
data("permeability")
permeability <- as.data.frame(permeability)
# Viewing the top 6 Rows
head(permeability)
# Making a histogram of the Permeablity
ggplot(data = permeability, aes(permeability["permeability"])) + ggtitle("Distribution of permeability") + xlab(permeability) +
theme(plot.title = element_text(hjust = 0.5)) + geom_histogram(bins = 40)
# Making a histogram of the Permeablity
ggplot(data = permeability, aes(permeability["permeability"])) + ggtitle("Distribution of permeability") + xlab("Permeability") +
theme(plot.title = element_text(hjust = 0.5))
permeability["permeability"]
class(permeability["permeability"])
as.numeric(permeability["permeability"])
list(permeability["permeability"])
# Making a histogram of the Permeablity
ggplot(data = permeability, aes(list(permeability["permeability"]))) + ggtitle("Distribution of permeability") + xlab("Permeability") +
theme(plot.title = element_text(hjust = 0.5))
# Making a histogram of the Permeablity
hist(permeability$permeability)
# Making a histogram of the Permeablity
hist(permeability$permeability, col = "grey", xlab = "Permeablity", ylab = "Frequency", title = "Histogram of Permeablity")
# Making a histogram of the Permeablity
hist(permeability$permeability, col = "grey", xlab = "Permeablity", ylab = "Frequency", main = "Histogram of Permeablity")
